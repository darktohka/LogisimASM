<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAQAAEABAAoAQAANgAAACAgEAABAAQA6AIAAF4BAAAwMBAAAQAEAGgGAABGBAAAKAAAABAA
        AAAgAAAAAQAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyfjABwf3AAb29vAGlpaQBhYWEA+Pj4AO7u
        7gCA6IAApKSkAFhgWAD///8A6enpAAAAAAC//78A1dXVAL+/vwDMzMzMzMzMzMzMzMzMzMzMzPQiDszM
        zMzMxLqwSMzMzMzMOqqoPMzMd3eeqqq0zMzMzMCqqqtMzMzMwqqqquHdzMzCqqqq4d3MzMCqqqtMzAAA
        nqqqtMzMzMw6qqg8zMzMxLq4SMzMzMz0Ig7MzMzMzMzMzMzMzMzMzMzMzMzMzP//AAD//wAAwP8AAOA/
        AADwHwAAAA8AAPgHAAD4AAAA+AAAAPgHAAAADwAA8B8AAOA/AADA/wAA//8AAP//AAAoAAAAIAAAAEAA
        AAABAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgP+AAIWFhQA/mz8AWVlZAPT09AAvLy8A4ODgAA8t
        DwAREREABwcHAKampgCUlJQA////AM/PzwC5ubkAAAAAAP//////////////////////////////////
        //////////////////////////////////////////////////////4REa3////////////////4gzNY
        lR3//////////////YHMzGo4W//////////////YrMzMxLVa////////////+obMzMzMqD//////////
        //8zzMzMzMQ43/////8iIiIiKWzMzMzMy57///////////MczMzMzMyo7//////////6XMzMzMzMyo3/
        ////////9pzMzMzMzMwY//////////+WzMzMzMzMwz//////////jczMzMzMzMaAAAD//////43MzMzM
        zMzGgAAA//////+WzMzMzMzMwz/////////2nMzMzMzMzBj/////////+lzMzMzMzMqN//////////Mc
        zMzMzMyo7////3d3d3d5bMzMzMzLnv//////////M8zMzMzEON//////////+obMzMzMqD//////////
        /9iszMzEpVr///////////2BzMxqOFv////////////4gzNYlR3//////////////hERrf//////////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////gP///4AP//+AA///wAD//+AAf//wAB/wAAAP//gAB//4AAP/+A
        AD//wAAf/8AAAP/AAAD/wAAf/4AAP/+AAD//gAB/AAAA//8AAf/+AAf//AAP//gAP//4AP//+A//////
        //////////////////8oAAAAMAAAAGAAAAABAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK+v
        rwCTk5MAab1pAGlpaQD8/PwA9PT0AObm5gAhISEA0NDQAAoNCgADAwMAIOggAP///wA6OjoADDIMAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZkRmXYAAAAAAAAAAAAAAAAAAAAAAAAAmqAACqjkKQAAAA
        AAAAAAAAAAAAAAAAAAKwQSJE6AC4SQAAAAAAAAAAAAAAAAAAAAArid3d3XFIsIIAAAAAAAAAAAAAAAAA
        AAACqH3d3d3WlIuCAAAAAAAAAAAAAAAAAAAAIEXd3d3d3XKAgQAAAAAAAAAAAAAAAAAABALd3d3d3d1i
        gOcAAAAAAAAAAAAAAAAAB4h93d3d3d3ddLgQAAAAAAAAAAAAAAAAACtN3d3d3d3d3RqyAAAAAAAAAMzM
        zMzMzM+n3d3d3d3d3dngQAAAAAAAADMzMzMzMzQC3d3d3d3d3d1utAAAAAAAAAAAAAAAAAeOXd3d3d3d
        3d3WQEAAAAAAAAAAAAAAAABKfd3d3d3d3d3dZAQAAAAAAAAAAAAAAAAgHd3d3d3d3d3d1usgAAAAAAAA
        AAAAAACQTd3d3d3d3d3d3XipAAAAAAAAAAAAAAAL7d3d3d3d3d3d3dGuAAAAAAAAAAAAAAAI7d3d3d3d
        3d3d3dVAIAAAAAAAAAAAAAAIjd3d3d3d3d3d3d1o/MzMzAAAAAAAAAAIjd3d3d3d3d3d3d1o/MzMzAAA
        AAAAAAAI7d3d3d3d3d3d3dVAIAAAAAAAAAAAAAAL7d3d3d3d3d3d3dGuAAAAAAAAAAAAAACQTd3d3d3d
        3d3d3XipAAAAAAAAAAAAAAAgHd3d3d3d3d3d1usgAAAAAAAAAAAAAABKnd3d3d3d3d3dVAQAAAAAAAAA
        AAAAAAeOXd3d3d3d3d3WQEAAAAAAACIiIiIiIiQC3d3d3d3d3d1utAAAAAAAAP////////qn3d3d3d3d
        3dfgQAAAAAAAAAAAAAAAABtN3d3d3d3d3RqyAAAAAAAAAAAAAAAAB4h93d3d3d3ddLgQAAAAAAAAAAAA
        AAAABALd3d3d3d1SgOcAAAAAAAAAAAAAAAAAK0Xd3d3d3XKAggAAAAAAAAAAAAAAAAACqH3d3d3WlIuC
        AAAAAAAAAAAAAAAAAAArid3d3XFIsIIAAAAAAAAAAAAAAAAAAAKwQSIk6LC4SQAAAAAAAAAAAAAAAAAA
        AAmqAAC6jkKQAAAAAAAAAAAAAAAAAAAAAACZkRGXYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP8A
        f////wAA/gAH////AAD+AAD///8AAP8AAD///wAA/4AAD///AAD/wAAD//8AAP/gAAD//wAA/+AAAH//
        AAD/8AAAP/8AAAAAAAAf/wAAAAAAAA//AAD/+AAAB/8AAP/8AAAD/wAA//wAAAH/AAD//AAAAP8AAP/+
        AAAA/wAA//4AAAB/AAD//gAAAAAAAP/+AAAAAAAA//4AAAB/AAD//gAAAP8AAP/8AAAA/wAA//wAAAH/
        AAD//AAAA/8AAP/4AAAH/wAAAAAAAA//AAAAAAAAH/8AAP/wAAA//wAA/+AAAH//AAD/4AAA//8AAP/A
        AAP//wAA/4AAD///AAD/AAA///8AAP4AAP///wAA/gAH////AAD/AH////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAA==
</value>
  </data>
</root>